{"version":3,"file":"static/js/141.78ffadee.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,2FACrBC,EADqB,qCACeF,GADf,SAEdD,IAAAA,IAAUG,GAFI,mFAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,8EACpBF,EADoB,+BACUF,EADV,kBAC2BI,GAD3B,SAEbL,IAAAA,IAAUG,GAFG,mFAAH,sDAKZG,EAAc,mCAAG,WAAMC,GAAN,8EACtBJ,EADsB,gBACPI,EADO,oBACON,GADP,SAEfD,IAAAA,IAAUG,GAFK,mFAAH,sDAKdK,EAAS,mCAAG,WAAMD,GAAN,8EACjBJ,EADiB,gBACFI,EADE,4BACoBN,GADpB,SAEVD,IAAAA,IAAUG,GAFA,mFAAH,sDAKTM,EAAY,mCAAG,WAAMF,GAAN,8EACpBJ,EADoB,gBACLI,EADK,4BACiBN,GADjB,SAEbD,IAAAA,IAAUG,GAFG,mFAAH,qD,0FCtBZO,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2H,8CCYtB,IAbkB,SAACE,EAAWC,GAAZ,OAChBD,EACIA,EAAUE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,GACtB,OACE,yBACE,SAAC,IAAD,CAAWU,GAAE,iBAAYV,GAAMW,MAAO,CAAEC,KAAML,GAA9C,SACGE,KAFIT,EAMZ,IACD,IAXY,C,uJCCLa,GAAYT,E,QAAAA,GAAOU,EAAAA,GAAPV,CAAH,qE,SCATW,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACpBC,EAAgB,CACpBnB,MAF6C,EAAZoB,OAcnC,OACE,SAAC,KAAD,CAAQD,cAAeA,EAAeE,SAVnB,SAACC,EAAD,GAA2B,EAAhBC,UAAiB,IACvCvB,EAAUsB,EAAVtB,MACa,KAAjBA,EAAMwB,QAGVN,EAAQlB,EAAMyB,cAAcD,OAE7B,EAGC,UACE,UAACT,EAAD,YACE,SAAC,KAAD,CACEW,KAAK,OACLC,KAAK,QACLC,YAAY,eACZC,WAAS,EACTC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,wBAIP,E,6BCQD,EAjCe,WAAO,IAAD,EACnB,GAAsCK,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3B,GAAW4B,EAAAA,EAAAA,MAEXC,EAAS,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAoB/C,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,WAA2BC,GAA3B,mGAE2B1C,EAAAA,EAAAA,IAAa0C,GAFxC,gBAEYC,EAFZ,EAEYA,KACRT,EAAeS,EAAKC,SAHxB,0GAJc,sBACI,KAAdL,GADU,oCAUdM,CAAYN,EACb,GAAE,CAACA,IACJO,QAAQC,IAAId,IAGV,4BACE,SAACf,EAAD,CAAWC,QApBM,SAAA6B,GACnBX,EAAgB,CAAEpC,MAAO+C,EAAWvB,QACrC,EAkBqCJ,MAAOkB,KACzC,yBAAKU,EAAAA,EAAAA,GAAUhB,EAAavB,OAGjC,C","sources":["components/FetchAPI/FetchAPI.jsx","components/MovieLink.styled.jsx","components/MoviesMap/MoviesMap.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Search.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '1b4670fa78c776f91ad91934fb8aeb13';\n\nexport const fetchTrending = async () => {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  return await axios.get(url);\n};\n\nexport const searchMovies = async query => {\n  const url = `search/movie?api_key=${API_KEY}&query=${query}`;\n  return await axios.get(url);\n};\n\nexport const fetchMovieById = async id => {\n  const url = `movie/${id}?api_key=${API_KEY}`;\n  return await axios.get(url);\n};\n\nexport const fetchCast = async id => {\n  const url = `movie/${id}/credits?api_key=${API_KEY}`;\n  return await axios.get(url);\n};\n\nexport const fetchReviews = async id => {\n  const url = `movie/${id}/reviews?api_key=${API_KEY}`;\n  return await axios.get(url);\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieLink = styled(NavLink)`\n  color: #fff;\n  &:hover,\n  &:focus {\n    color: #ddd;\n  }\n  &:active {\n    color: red;\n  }\n`;\n","import { MovieLink } from '../MovieLink.styled';\n\nconst moviesMap = (movieList, location) =>\n  movieList\n    ? movieList.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <MovieLink to={`/movie/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        );\n      })\n    : null;\n\nexport default moviesMap;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const SearchBox = styled(Form)`\n  padding-top: 10px;\n  padding-left: 40px;\n`;\n","import { Field, Formik } from 'formik';\nimport { SearchBox } from './SearchBar.styled';\n\nexport const SearchBar = ({ onQuery, value }) => {\n  const initialValues = {\n    query: value,\n  };\n\n  const HandleSearch = (values, { resetForm }) => {\n    const { query } = values;\n    if (query.trim() === '') {\n      return;\n    }\n    onQuery(query.toLowerCase().trim());\n    // resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={HandleSearch}>\n      <SearchBox>\n        <Field\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movie\"\n          autoFocus\n          required\n        />\n        <button type=\"sublit\">Search</button>\n      </SearchBox>\n    </Formik>\n  );\n};\n","import { searchMovies } from 'components/FetchAPI/FetchAPI';\nimport moviesMap from 'components/MoviesMap/MoviesMap';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Search = () => {\n  const [movieFilter, setMovieFilter] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleSubmit = submitText => {\n    setSearchParams({ query: submitText.trim() });\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    async function filterMovie(queryString) {\n      try {\n        const { data } = await searchMovies(queryString);\n        setMovieFilter(data.results);\n      } catch (error) {}\n    }\n    filterMovie(movieName);\n  }, [movieName]);\n  console.log(movieFilter);\n\n  return (\n    <div>\n      <SearchBar onQuery={handleSubmit} value={movieName} />\n      <ul>{moviesMap(movieFilter, location)}</ul>\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":["axios","API_KEY","fetchTrending","url","searchMovies","query","fetchMovieById","id","fetchCast","fetchReviews","MovieLink","styled","NavLink","movieList","location","map","title","to","state","from","SearchBox","Form","SearchBar","onQuery","initialValues","value","onSubmit","values","resetForm","trim","toLowerCase","type","name","placeholder","autoFocus","required","useState","movieFilter","setMovieFilter","useSearchParams","searchParams","setSearchParams","useLocation","movieName","get","useEffect","queryString","data","results","filterMovie","console","log","submitText","moviesMap"],"sourceRoot":""}